openapi: 3.0.3
info:
  title: 世界的领域模型
  version: 1.0.0
servers:
- url: /
tags:
- name: mall
- name: mall/product
- name: mall/product/category
- name: mall/product/brand
- name: mall/product/spu
- name: mall/product/attr
- name: mall/product/attr/key
- name: mall/product/attr/value
paths:
  /product/attr/key:
    post:
      deprecated: false
      description: 添加商品规格键
      operationId: createProductAttrKey
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductAttrKeyReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 添加商品规格键
      tags:
      - mall/product/attr/key
      x-apifox-folder: mall/product/attr/key
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/key/{attr_key_id}:
    put:
      deprecated: false
      description: 更新商品规格键
      operationId: updateProductAttrKey
      parameters:
      - description: 商品规格键编码
        explode: false
        in: path
        name: attr_key_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductAttrKeyReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                title: 更新条数
                type: integer
          description: 成功
      summary: 更新商品规格键
      tags:
      - mall/product/attr/key
      x-apifox-folder: mall/product/attr/key
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/category/{category_id}:
    get:
      deprecated: false
      description: 获取商品分类内容
      operationId: getProductCategoryContent
      parameters:
      - description: 商品分类编码
        example: ""
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ContentProductCategoryResp'
          description: 成功
      summary: 获取商品分类内容
      tags:
      - mall/product/category
      x-apifox-folder: mall/product/category
      x-apifox-status: developing
      x-accepts: application/json
    put:
      deprecated: false
      description: 更新商品分类
      operationId: updateProductCategory
      parameters:
      - description: 商品分类id
        example: ""
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCategoryReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 更新商品分类
      tags:
      - mall/product/category
      x-apifox-folder: mall/product/category
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/brand/page:
    get:
      deprecated: false
      description: 分页查询商品品牌
      operationId: pageProductBrandContent
      parameters:
      - example: application/json;charset:utf-8;
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageQueryProductBrandReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/PageProductBrandResp'
          description: 成功
      summary: 分页查询商品品牌
      tags:
      - mall/product/brand
      x-apifox-folder: mall/product/brand
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/key/{atty_key_id}:
    get:
      deprecated: false
      description: 获取商品规格键
      operationId: getProductAttrKey
      parameters:
      - description: 商品规格键编码
        example: "1"
        explode: false
        in: path
        name: atty_key_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ContentProductAttrKeyResp'
          description: 成功
      summary: 获取商品规格键
      tags:
      - mall/product/attr/key
      x-apifox-folder: mall/product/attr/key
      x-apifox-status: developing
      x-accepts: application/json
  /product/category:
    post:
      deprecated: false
      description: 添加商品分类
      operationId: createProductCategory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductCategoryReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 添加商品分类
      tags:
      - mall/product/category
      x-apifox-folder: mall/product/category
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/key/page:
    get:
      deprecated: false
      description: 分页获取商品规格键内容
      operationId: pageProductAttrKey
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageQueryProductAttrKeyReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/PageProductAttrKeyResp'
          description: 成功
      summary: 分页获取商品规格键内容
      tags:
      - mall/product/attr/key
      x-apifox-folder: mall/product/attr/key
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/value/page:
    get:
      deprecated: false
      description: 分页查询商品规格值
      operationId: pageProductAttrValue
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageQueryProductAttrValueReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/PageProductAttrValueResp'
          description: 成功
      summary: 分页查询商品规格值
      tags:
      - mall/product/attr/value
      x-apifox-folder: mall/product/attr/value
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/category/page:
    get:
      deprecated: false
      description: 分页获取商品分类内容
      operationId: pageProductCategoryContent
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageQueryProductCategoryReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/PageProductCategoryResp'
          description: 成功
      summary: 分页获取商品分类内容
      tags:
      - mall/product/category
      x-apifox-folder: mall/product/category
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/brand:
    post:
      deprecated: false
      description: 添加商品品牌
      operationId: createProductBrand
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductBrandReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 添加商品品牌
      tags:
      - mall/product/brand
      x-apifox-folder: mall/product/brand
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/{attr_key_id}:
    post:
      deprecated: false
      description: 创建商品规格值
      operationId: createProductAttrValue
      parameters:
      - description: 规格键编码
        example: ""
        explode: false
        in: path
        name: attr_key_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductAttrValueReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                title: 规格值编码
                type: integer
          description: 成功
      summary: 创建商品规格值
      tags:
      - mall/product/attr/value
      x-apifox-folder: mall/product/attr/value
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/brand/{brand_id}:
    get:
      deprecated: false
      description: 获取商品品牌内容
      operationId: getProductBrandContent
      parameters:
      - description: 商品品牌编码
        example: "1"
        explode: false
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ContentProductBrandResp'
          description: 成功
      summary: 获取商品品牌内容
      tags:
      - mall/product/brand
      x-apifox-folder: mall/product/brand
      x-apifox-status: developing
      x-accepts: application/json
    put:
      deprecated: false
      description: 更新商品品牌
      operationId: updateProductBrand
      parameters:
      - description: 商品品牌编码
        example: ""
        explode: false
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductBrandReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 更新商品品牌
      tags:
      - mall/product/brand
      x-apifox-folder: mall/product/brand
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/attr/value/{attr_value_id}:
    get:
      deprecated: false
      description: 获取商品规格值内容
      operationId: getProductAttrValue
      parameters:
      - description: 商品规格值编码
        explode: false
        in: path
        name: attr_value_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ContentProductAttrValueResp'
          description: 成功
      summary: 获取商品规格值内容
      tags:
      - mall/product/attr/value
      x-apifox-folder: mall/product/attr/value
      x-apifox-status: developing
      x-accepts: application/json
  /product/attr/{attr_key_id}/{attr_value_id}:
    put:
      deprecated: false
      description: 更新商品规格值
      operationId: updateProductAttrValue
      parameters:
      - description: 商品规格键编码
        explode: false
        in: path
        name: attr_key_id
        required: true
        schema:
          type: integer
        style: simple
      - description: 商品规格值编码
        explode: false
        in: path
        name: attr_value_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductAttrValueReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                type: integer
          description: 成功
      summary: 更新商品规格值
      tags:
      - mall/product/attr/value
      x-apifox-folder: mall/product/attr/value
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
  /product/spu:
    post:
      deprecated: false
      description: 创建商品SPU
      operationId: createProductSpu
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductSpuAndSkuReq'
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                title: 商品spu编码
                type: integer
          description: 成功
      summary: 创建商品SPU
      tags:
      - mall/product/spu
      x-apifox-folder: mall/product/spu
      x-apifox-status: developing
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    CreateProductSpuAndSkuReq:
      example:
        sellPoint: sellPoint
        visible: true
        skus:
        - quantity: 1
          attrValueIds:
          - 6
          - 6
          price: 1
        - quantity: 1
          attrValueIds:
          - 6
          - 6
          price: 1
        name: name
        description: description
        picUrls:
        - picUrls
        - picUrls
        cid: 0
      properties:
        name:
          minLength: 1
          title: SPU名称
          type: string
        sellPoint:
          title: 卖点
          type: string
        description:
          title: 描述
          type: string
        cid:
          title: 商品分类编码
          type: integer
        picUrls:
          items:
            type: string
          title: 商品主图地址
          type: array
        visible:
          title: 是否上架
          type: boolean
        skus:
          items:
            $ref: '#/components/schemas/SkuDto'
          title: 商品SKU信息列表
          type: array
      required:
      - cid
      - name
      - picUrls
      - skus
      - visible
      type: object
      x-apifox-orders:
      - name
      - sellPoint
      - description
      - cid
      - picUrls
      - visible
      - skus
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/spu
    CreateProductAttrValueReq:
      example:
        name: name
      properties:
        name:
          title: 规格值名字
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - name
      - status
      type: object
      x-apifox-orders:
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/value
    UpdateProductCategoryReq:
      example:
        picUrl: picUrl
        name: name
        description: description
        pid: 0
        sort: 6
      properties:
        pid:
          title: 父分类编码
          type: integer
        name:
          minLength: 1
          title: 分类名称
          type: string
        description:
          title: 分类描述
          type: string
        picUrl:
          title: 分类图片
          type: string
        sort:
          title: 分类排序
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
      type: object
      x-apifox-orders:
      - pid
      - name
      - description
      - picUrl
      - sort
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/category
    ContentProductAttrValueResp:
      example:
        name: name
        id: 6
        attrKeyId: 1
      properties:
        id:
          title: 规格值编号
          type: integer
        attrKeyId:
          title: 规格键编码
          type: integer
        name:
          title: 规格值名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - attrKeyId
      - id
      - name
      - status
      type: object
      x-apifox-orders:
      - id
      - attrKeyId
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/value
    DeletedEnum:
      enum:
      - 0
      - 1
      type: integer
      x-apifox:
        enumDescriptions:
          "0": 已删除
          "1": 未删除
      x-apifox-folder: enums
    PageProductBrandResp:
      example:
        total: 0
        data:
        - picUrl: picUrl
          createTime: createTime
          name: name
          description: description
          updateTime: updateTime
          id: 6
        - picUrl: picUrl
          createTime: createTime
          name: name
          description: description
          updateTime: updateTime
          id: 6
      properties:
        total:
          title: 条数
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ContentProductBrandResp'
          title: 商品品牌内容数据集
          type: array
      required:
      - data
      - total
      type: object
      x-apifox-ignore-properties: []
      x-apifox-orders:
      - total
      - data
      x-apifox-folder: mall/product/brand
    PageQueryProductBrandReq:
      example:
        pageNo: 1
        name: name
        pageSize: 1
        id: 1
      properties:
        pageNo:
          minimum: 1
          title: 页码
          type: integer
        pageSize:
          minimum: 1
          title: 页面大小
          type: integer
        id:
          title: 品牌编码
          type: integer
        name:
          title: 品牌名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - pageNo
      - pageSize
      type: object
      x-apifox-orders:
      - pageNo
      - pageSize
      - id
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/brand
    UpdateProductBrandReq:
      example:
        picUrl: picUrl
        name: name
        description: description
      properties:
        name:
          minLength: 1
          title: 品牌名称
          type: string
        description:
          title: 品牌描述
          type: string
        picUrl:
          title: 品牌名图片
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      type: object
      x-apifox-orders:
      - name
      - description
      - picUrl
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/brand
    PageProductAttrKeyResp:
      example:
        total: 0
        data:
        - createTime: createTime
          name: name
          updateTime: updateTime
          id: 0
        - createTime: createTime
          name: name
          updateTime: updateTime
          id: 0
      properties:
        total:
          title: 数据条数
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ContentProductAttrKeyResp'
          title: 商品规格键数据集
          type: array
      required:
      - data
      - total
      type: object
      x-apifox-orders:
      - total
      - data
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/key
    PageQueryProductAttrValueReq:
      example:
        pageNo: 0
        name: name
        pageSize: 6
        attrKeyId: 1
      properties:
        pageNo:
          title: 页码
          type: integer
        pageSize:
          title: 页面大小
          type: integer
        attrKeyId:
          title: 规格值编码
          type: integer
        name:
          title: 规格名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - pageNo
      - pageSize
      type: object
      x-apifox-orders:
      - pageNo
      - pageSize
      - attrKeyId
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/value
    PageQueryProductCategoryReq:
      example:
        pageNo: 0
        name: name
        pageSize: 6
        pid: 5
        id: 1
      properties:
        pageNo:
          title: 页码
          type: integer
        pageSize:
          title: 页面大小
          type: integer
        id:
          title: 分类编码
          type: integer
        pid:
          title: 分类父编码
          type: integer
        name:
          title: 分类名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - pageNo
      - pageSize
      type: object
      x-apifox-orders:
      - pageNo
      - pageSize
      - id
      - pid
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/category
    UpdateProductAttrValueReq:
      example:
        name: name
      properties:
        name:
          title: 规格值名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      type: object
      x-apifox-orders:
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/value
    UpdateProductAttrKeyReq:
      example:
        name: name
      properties:
        name:
          minLength: 1
          title: 规格键名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      type: object
      x-apifox-orders:
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/key
    CreateProductAttrKeyReq:
      example:
        name: name
      properties:
        name:
          minLength: 1
          title: 规格键名称
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/key
    PageProductAttrValueResp:
      example:
        total: 0
        data:
        - name: name
          id: 6
          attrKeyId: 1
        - name: name
          id: 6
          attrKeyId: 1
      properties:
        total:
          title: 条数
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ContentProductAttrValueResp'
          title: 规格值集
          type: array
      required:
      - data
      - total
      type: object
      x-apifox-orders:
      - total
      - data
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/value
    ContentProductAttrKeyResp:
      example:
        createTime: createTime
        name: name
        updateTime: updateTime
        id: 0
      properties:
        id:
          title: 商品规格键编码
          type: integer
        name:
          title: 规格键名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        deleted:
          $ref: '#/components/schemas/DeletedEnum'
        createTime:
          title: 创建时间
          type: string
        updateTime:
          title: 更新时间
          type: string
      required:
      - createTime
      - deleted
      - id
      - name
      - status
      type: object
      x-apifox-orders:
      - id
      - name
      - status
      - deleted
      - createTime
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/key
    ContentProductCategoryResp:
      example:
        picUrl: picUrl
        createTime: createTime
        name: name
        description: description
        pid: 6
        updateTime: updateTime
        id: 0
        sort: 1
      properties:
        id:
          title: 商品分类编码
          type: integer
        pid:
          title: 商品分类父编码
          type: integer
        name:
          title: 商品分类名称
          type: string
        description:
          title: 商品分类描述
          type: string
        picUrl:
          title: 商品分类图片
          type: string
        sort:
          title: 商品分类排序
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        deleted:
          $ref: '#/components/schemas/DeletedEnum'
        createTime:
          title: 创建时间
          type: string
        updateTime:
          title: 更新时间
          type: string
      required:
      - createTime
      - deleted
      - id
      - name
      - pid
      - sort
      - status
      type: object
      x-apifox-orders:
      - id
      - pid
      - name
      - description
      - picUrl
      - sort
      - status
      - deleted
      - createTime
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/category
    PageProductCategoryResp:
      example:
        total: 0
        data:
        - picUrl: picUrl
          createTime: createTime
          name: name
          description: description
          pid: 6
          updateTime: updateTime
          id: 0
          sort: 1
        - picUrl: picUrl
          createTime: createTime
          name: name
          description: description
          pid: 6
          updateTime: updateTime
          id: 0
          sort: 1
      properties:
        total:
          title: 条数
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ContentProductCategoryResp'
          title: 商品分类内容集
          type: array
      required:
      - data
      - total
      type: object
      x-apifox-orders:
      - total
      - data
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/category
    StatusEnum:
      enum:
      - 0
      - 1
      type: integer
      x-apifox:
        enumDescriptions:
          "0": 关闭
          "1": 开启
      x-apifox-folder: enums
    CreateProductBrandReq:
      example:
        picUrl: picUrl
        name: name
        description: description
      properties:
        name:
          maxLength: 20
          minLength: 1
          title: 品牌名称
          type: string
        description:
          title: 品牌描述
          type: string
        picUrl:
          title: 品牌名图片
          type: string
      required:
      - name
      type: object
      x-apifox-orders:
      - name
      - description
      - picUrl
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/brand
    PageQueryProductAttrKeyReq:
      example:
        pageNo: 0
        name: name
        pageSize: 6
      properties:
        pageNo:
          title: 页码
          type: integer
        pageSize:
          title: 页面大小
          type: integer
        name:
          title: 规格键名称
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - pageNo
      - pageSize
      type: object
      x-apifox-orders:
      - pageNo
      - pageSize
      - name
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/attr/key
    ContentProductBrandResp:
      example:
        picUrl: picUrl
        createTime: createTime
        name: name
        description: description
        updateTime: updateTime
        id: 6
      properties:
        id:
          title: 品牌编码
          type: integer
        name:
          title: 品牌名称
          type: string
        description:
          title: 品牌描述
          type: string
        picUrl:
          title: 品牌图片
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        deleted:
          $ref: '#/components/schemas/DeletedEnum'
        createTime:
          title: 创建时间
          type: string
        updateTime:
          title: 更新时间
          type: string
      required:
      - createTime
      - deleted
      - id
      - name
      - status
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - picUrl
      - status
      - deleted
      - createTime
      - updateTime
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/brand
    CreateProductCategoryReq:
      example:
        picUrl: picUrl
        name: name
        description: description
        pid: 0
        sort: 0
      properties:
        pid:
          title: 父分类编码
          type: integer
        name:
          maxLength: 20
          minLength: 1
          title: 分类名称
          type: string
        description:
          title: 分类描述
          type: string
        picUrl:
          title: 分类图片
          type: string
        sort:
          minimum: 0
          title: 分类排序
          type: integer
      required:
      - name
      - pid
      - sort
      type: object
      x-apifox-orders:
      - pid
      - name
      - description
      - picUrl
      - sort
      x-apifox-ignore-properties: []
      x-apifox-folder: mall/product/category
    SkuDto:
      example:
        quantity: 1
        attrValueIds:
        - 6
        - 6
        price: 1
      properties:
        attrValueIds:
          items:
            type: integer
          title: 商品规格数组
          type: array
        price:
          description: 单位：分
          minimum: 1
          title: 商品价格
          type: integer
        quantity:
          minimum: 1
          title: 库存数量
          type: integer
      required:
      - attrValueIds
      - price
      - quantity
      type: object
      x-apifox-ignore-properties: []
      x-apifox-orders:
      - attrValueIds
      - price
      - quantity
      x-apifox-folder: mall/product/sku

